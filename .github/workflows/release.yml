name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - v*

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: flaviacastro/caddy

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Create a new GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Create a new GitHub Release if it does not exists
          gh release list | grep "${{ github.ref_name }}" ||
            gh release create "${{ github.ref_name }}" \
              --repo="${{ github.repository }}" \
              --title="${{ github.ref_name }}" \
              --notes="Caddy ${{ github.ref_name }}" \
              --verify-tag \
              --latest

  build:
    name: Build Docker images
    needs: release
    outputs:
      image_version: ${{ steps.meta.outputs.version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Build Docker images
        id: build-images
        uses: docker/build-push-action@v6.7.0
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=registry,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build-images.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      
      - name: Upload digest
        uses: actions/upload-artifact@v4.4.0
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Create manifest list and push
    runs-on: ubuntu-latest
    needs:
      - build

    permissions:
      contents: read

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4.1.8
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}
      
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}

  trivy-fs:
    name: Scan filesystem
    runs-on: ubuntu-latest
    needs: merge

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Scan filesystem
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: fs
          format: sarif
          output: trivy-results.sarif

      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v3.26.6
        if: cancelled() == false
        with:
          sarif_file: trivy-results.sarif

  trivy-image-amd-64:
    name: Scan image
    runs-on: ubuntu-latest
    needs: merge

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Scan image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: image
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}/amd64:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v3.26.6
        if: cancelled() == false
        with:
          sarif_file: trivy-results.sarif

  trivy-image-arm-64:
    name: Scan image
    runs-on: ubuntu-latest
    needs: merge

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Scan image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: image
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}/arm64:${{ github.sha }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v3.26.6
        if: cancelled() == false
        with:
          sarif_file: trivy-results.sarif

  trivy-repo:
    name: Scan repository
    runs-on: ubuntu-latest
    needs: merge

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Scan repository
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: repo
          format: sarif
          output: trivy-results.sarif

      - name: Upload scan results
        uses: github/codeql-action/upload-sarif@v3.26.6
        if: cancelled() == false
        with:
          sarif_file: trivy-results.sarif
